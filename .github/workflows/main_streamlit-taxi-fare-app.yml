name: Build and Deploy Streamlit App to Azure

on:
  push:
    branches:
      - main  # Trigger deploy when code is pushed to the main branch
  pull_request:
    branches:
      - main  # Trigger deploy on PR to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install the dependencies from the requirements.txt file

      # Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: myacrstreamlit.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t myacrstreamlit.azurecr.io/streamlit-taxi-fare-app:latest .
          docker push myacrstreamlit.azurecr.io/streamlit-taxi-fare-app:latest

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2  # Use the latest version
        with:
          app-name: streamlit-taxi-fare-app  # Azure App Service name
          slot-name: production  # Default slot for deployment
          images: myacrstreamlit.azurecr.io/streamlit-taxi-fare-app:latest
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          registry-url: myacrstreamlit.azurecr.io

      # Debug step (optional)
      - name: Debug Environment
        if: failure()  # Run only if a failure occurs
        run: |
          echo "Node.js version:"
          node --version
          echo "npm version:"
          npm --version
          ls -al /home/runner/work/_actions/azure/webapps-deploy/v2/
