name: Build and Deploy Streamlit App to Azure

on:
  push:
    branches:
      - main  # Trigger deploy when code is pushed to the main branch
  pull_request:
    branches:
      - main  # Trigger deploy on PR to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install the dependencies from the requirements.txt file

      # Log in to Azure using service principal credentials stored in GitHub secrets
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Log in to Azure Container Registry (ACR)
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: myacrstreamlit.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build Docker image and push to ACR
      - name: Build and Push Docker Image
        run: |
          docker build -t myacrstreamlit.azurecr.io/mystreamlit-app:latest .
          docker push myacrstreamlit.azurecr.io/mystreamlit-app:latest

      # Set AZURE_STORAGE_CONNECTION_STRING environment variable for the Streamlit app
      - name: Set AZURE_STORAGE_CONNECTION_STRING for Streamlit App
        run: |
          echo "AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" >> $GITHUB_ENV

      # Deploy to Azure Web App using Azure CLI (Manual Deployment)
      - name: Deploy to Azure Web App via Azure CLI
        run: |
          az webapp config container set --name mystreamlit-app \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --docker-custom-image-name myacrstreamlit.azurecr.io/mystreamlit-app:latest

      # Optional: Verify Deployment
      - name: Verify Deployment
        run: |
          curl --fail https://mystreamlit-app.azurewebsites.net || exit 1  # Check if the app is up and running

      # Optional: Swap Staging to Production (If Using Staging Slot)
      - name: Swap Staging to Production (Optional)
        if: success() && github.ref == 'refs/heads/main'
        run: |
          az webapp deployment slot swap --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name mystreamlit-app \
            --slot staging \
            --target-slot production
