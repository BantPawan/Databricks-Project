name: Build and Deploy Streamlit App to Azure

on:
  push:
    branches:
      - main  # Trigger deploy on code push to the main branch
  pull_request:
    branches:
      - main  # Trigger deploy on PR to the main branch
  workflow_dispatch:  # Allow manual trigger of the workflow

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment (version 3.x)
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step 3: Cache Python dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Log in to Azure using Service Principal credentials
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 6: Log in to Azure Container Registry (if not using Managed Identity)
      - name: Log in to Azure Container Registry
        if: ${{ secrets.ACR_USERNAME && secrets.ACR_PASSWORD }}
        uses: azure/docker-login@v1
        with:
          login-server: myacrstreamlit.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 7: Build and Push Docker Image to Azure Container Registry
      - name: Build and Push Docker Image
        run: |
          docker build -t myacrstreamlit.azurecr.io/mystreamlit-app:latest .
          docker push myacrstreamlit.azurecr.io/mystreamlit-app:latest

      # Step 8: Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: mystreamlit-app
          images: myacrstreamlit.azurecr.io/mystreamlit-app:latest

      # Optional Step 9: Debugging (runs only on failure)
      - name: Debug Environment
        if: failure()
        run: |
          echo "Debugging environment..."
          echo "Python version:"
          python --version
          echo "Docker version:"
          docker --version
          ls -al .
