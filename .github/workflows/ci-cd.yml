name: CI/CD for Streamlit App

on:
  push:
    branches:
      - main  # Trigger deployment when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t streamlit-app:latest .

    # Step 3: Save Docker image as .tar file
    - name: Save Docker image to tar
      run: |
        docker save -o streamlit-app.tar streamlit-app:latest

    # Step 4: Transfer .tar file to EC2
    - name: Transfer tar file to EC2
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: streamlit-app.tar
        target: /home/${{ secrets.EC2_USER }}/streamlit-app.tar

    # Step 5: SSH into EC2 and deploy Docker container
    - name: SSH into EC2 and deploy Docker container
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          set -e
          # Stop and remove any existing container
          docker stop streamlit-app || true
          docker rm streamlit-app || true

          # Load Docker image from .tar file
          docker load -i /home/${{ secrets.EC2_USER }}/streamlit-app.tar

          # Clean up old images
          docker image prune -f

          # Run the Docker container
          docker run -d -p 8501:8501 --name streamlit-app streamlit-app:latest
